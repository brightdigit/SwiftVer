#if !canImport(ObjectiveC)
  import XCTest

  extension GlobalVersionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__GlobalVersionTests = [
      ("testdescription", testdescription),
      ("testFromBundle", testFromBundle),
      ("testFullDescription", testFullDescription),
      ("testGoodBundleVersion", testGoodBundleVersion),
      ("testInitBuildNumber", testInitBuildNumber),
      ("testInvalidBundleBuild", testInvalidBundleBuild),
      ("testMissingBundleBuild", testMissingBundleBuild),
      ("testMissingBundleVersion", testMissingBundleVersion),
      ("testMissingInvalidVersion", testMissingInvalidVersion),
      ("testSemverBuildNumber", testSemverBuildNumber),
      ("testShortDescription", testShortDescription),
      ("testShortDescriptionProduction", testShortDescriptionProduction),
      ("testStage", testStage),
      ("testStageBuildNumber", testStageBuildNumber),
      ("testSubSemVerValue", testSubSemVerValue)
    ]
  }

  extension HashTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HashTests = [
      ("testHashValid", testHashValid)
    ]
  }

  extension IntraVersionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IntraVersionTests = [
      ("testdescription", testdescription),
      ("testFromBundle", testFromBundle),
      ("testFullDescription", testFullDescription),
      ("testGoodBundleVersion", testGoodBundleVersion),
      ("testInitSemVer", testInitSemVer),
      ("testInvalidBundleBuild", testInvalidBundleBuild),
      ("testMissingBundleBuild", testMissingBundleBuild),
      ("testMissingBundleVersion", testMissingBundleVersion),
      ("testMissingInvalidVersion", testMissingInvalidVersion),
      ("testSemverBuildNumber", testSemverBuildNumber),
      ("testShortDescription", testShortDescription),
      ("testShortDescriptionProduction", testShortDescriptionProduction),
      ("testStage", testStage),
      ("testStageBuildNumber", testStageBuildNumber),
      ("testSubSemVerValue", testSubSemVerValue)
    ]
  }

  extension SemVerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SemVerTests = [
      ("testBadSemVerMMPString", testBadSemVerMMPString),
      ("testBadSemVerString", testBadSemVerString),
      ("testBadSemVerValues", testBadSemVerValues),
      ("testComparison", testComparison),
      ("testGoodSemVerMMPWithNoPatch", testGoodSemVerMMPWithNoPatch),
      ("testGoodSemVerMMPWithPatch", testGoodSemVerMMPWithPatch),
      ("testGoodSemVerWithNoPatch", testGoodSemVerWithNoPatch),
      ("testGoodSemVerWithPatch", testGoodSemVerWithPatch)
    ]
  }

  extension StageBuildDictionaryProtocolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StageBuildDictionaryProtocolTests = [
      ("testEmpty", testEmpty),
      ("testminimumSemVerBuildNumberNil", testminimumSemVerBuildNumberNil),
      ("testminimumSemVerBuildNumberNotNil", testminimumSemVerBuildNumberNotNil),
      ("testminimumStageBuildNumberNotFound", testminimumStageBuildNumberNotFound),
      ("testminimumStageBuildNumberNotNil", testminimumStageBuildNumberNotNil)
    ]
  }

  extension VersionControlInfoTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VersionControlInfoTests = [
      ("testInit", testInit),
      ("testInitBasedOn", testInitBasedOn),
      ("testInitJsonResource", testInitJsonResource)
    ]
  }

  extension VersionControlTypeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__VersionControlTypeTests = [
      ("testExample", testExample),
      ("testPerformanceExample", testPerformanceExample)
    ]
  }

  public func __allTests() -> [XCTestCaseEntry] {
    return [
      testCase(GlobalVersionTests.__allTests__GlobalVersionTests),
      testCase(HashTests.__allTests__HashTests),
      testCase(IntraVersionTests.__allTests__IntraVersionTests),
      testCase(SemVerTests.__allTests__SemVerTests),
      testCase(StageBuildDictionaryProtocolTests.__allTests__StageBuildDictionaryProtocolTests),
      testCase(VersionControlInfoTests.__allTests__VersionControlInfoTests),
      testCase(VersionControlTypeTests.__allTests__VersionControlTypeTests)
    ]
  }
#endif
